!function(e){
	const t = {}; function r(n){
		if (t[n]) return t[n].exports; const i = t[n] = {i:n, l:!1, exports:{}}; return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports
	}r.m = e, r.c = t, r.d = function(e, t, n){
		r.o(e, t) || Object.defineProperty(e, t, {enumerable:!0, get:n})
	}, r.r = function(e){
		'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value:'Module'}), Object.defineProperty(e, '__esModule', {value:!0})
	}, r.t = function(e, t){
		if (1 & t && (e = r(e)), 8 & t) return e; if (4 & t && 'object' == typeof e && e && e.__esModule) return e; const n = Object.create(null); if (r.r(n), Object.defineProperty(n, 'default', {enumerable:!0, value:e}), 2 & t && 'string' != typeof e) for (const i in e)r.d(n, i, (t => {
			return e[t]
		}).bind(null, i)); return n
	}, r.n = function(e){
		const t = e && e.__esModule ? function(){
			return e.default
		} : function(){
			return e
		}; return r.d(t, 'a', t), t
	}, r.o = function(e, t){
		return Object.prototype.hasOwnProperty.call(e, t)
	}, r.p = '', r(r.s = 0)
}([function(e, t, r){
	e.exports = r(1)
}, function(e, t, r){
	const n = r(2); e.exports = {initBrowserHost:e=>n.init(e)}
}, function(e, t, r){
	'use strict'; const n = r(3), i = {moreLogs:'', includeLogs:'', extraIgnoredEvents:[], MAX_LOG_SIZE:1e4, DEFAULT_LOGS_COUNT:300, GROUP_MIN_LEN:5, stackFilter:/wSpy/i}; function s(){
		return 'undefined' != typeof window && void 0 !== window.parent
	}e.exports = {init:function(e){
		const t = e.wSpyOverrideParam, r = e.settings, o = s(), c = o ? t || function(e){
				if ('undefined' != typeof URL){
					const t = new URL(e); return t.searchParams.get('wspy') || t.searchParams.get('wSpy')
				}
			}(window.parent.location.href) : null, l = n.init(o ? {Error:window.Error, memoryUsage:()=>window.performance.memory.usedJSHeapSize, frame:window, wSpyParam:c, settings:Object.assign({}, i, r)} : {}), u = {}; if (Object.keys(l).forEach(e=>u[e] = ()=>{}), !c) return u; try {
			const e = function(){
				try {
					return s() && void 0 !== window.parent.wSpy && window.parent.wSpy
				} catch (e){
					return !1
				}
			}(); return e ? (l.initStack = (new Error).stack, l.logs = e.logs || l.logs, (e.ver || 0) < l.ver ? (e.logs = l.logs, l.otherSpies = [e, ...e.otherSpies || []], window.parent.wSpy = l) : e.otherSpies.push(l), l) : o ? (window.parent.wSpy = l, l.initStack = (new Error).stack, l) : u
		} catch (e){
			return u
		}
	}}
}, function(e, t, r){
	'use strict'; const n = ['index', 'time', '_time', 'mem', 'source']; function i(e){
		return 'string' == typeof e || e instanceof String
	} function s(e){
		const t = e.Error, r = e.frame, s = e.settings, o = e.wSpyParam, c = e.memoryUsage; return {ver:4, logs:{}, otherSpies:[], init(){
			if (!this.includeLogs){
				const e = (o || '').split(',').filter(e=>'-' !== e[0]).filter(e=>e), t = (o || '').split(',').filter(e=>'-' === e[0]).map(e=>e.slice(1)); this.includeLogs = s.includeLogs.split(',').concat(e).filter(e=>-1 === t.indexOf(e)).reduce((e, t)=>(e[t] = !0, e), {})
			}
		}, shouldLog(e, t){
			return Array.isArray(t) && this.includeLogs[e] && !s.extraIgnoredEvents.includes(t[0])
		}, log(e, t, r){
			if (this.init(), !this.shouldLog(e, t)) return; this.logs.index = this.logs.index || 1, this.logs[e] = this.logs[e] || [], t.index = this.logs.index++, t.source = this.source(r); const n = new Date; t._time = `${n.getSeconds()}:${n.getMilliseconds()}`, t.time = n.getTime(), t.mem = c() / 1e6, this.logs[e].length > s.MAX_LOG_SIZE && (this.logs[e] = this.logs[e].slice(-1 * Math.floor(s.MAX_LOG_SIZE / 2))), !t[0] && t.source && (t[0] = t.source[0]), this.logs[e].push(t)
		}, getCallbackName(e, t){
			if (e){
				if (!e.name || i(e.name) && e.name.startsWith('bound ')){
					if (Array.isArray(e.source)) return e.source[0]; const r = this.source(t); if (Array.isArray(r)) return r
				} return e.name.trim()
			}
		}, search(e){
			return function(e){
				return '[object RegExp]' === Object.prototype.toString.call(e)
			}(e) ? this.merged(t=>e.test(t.join(' '))) : i(e) ? this.merged(t=>-1 !== t.join(' ').indexOf(e)) : Number.isInteger(e) ? this.merged().slice(-1 * e) : void 0
		}, logCallBackRegistration(e, t, r, n){
			e.source = this.source(n), this.log(t, [this.getCallbackName(e, n), ...r], n)
		}, logCallBackExecution(e, t, r, n){
			this.log(t, [this.getCallbackName(e, n), e.source, ...r], n)
		}, spyMobx(e){
			e.spy(e=>{
				if (!e.spyReportEnd && 'update' === e.type){
					const t = this.source(); this.log('mobx', [`update: ${e.name}`, ...t, e.newValue, e])
				}
			})
		}, purge(e){
			const t = -1 * (e || s.DEFAULT_LOGS_COUNT); Object.keys(this.logs).forEach(e=>this.logs[e] = this.logs[e].slice(t))
		}, clear(){
			Object.keys(this.logs).forEach(e=>this.logs[e] = [])
		}, recent(e){
			const t = -1 * (e || s.DEFAULT_LOGS_COUNT); return this.merged().slice(t)
		}, merged(e){
			return [].concat.apply([], Object.keys(this.logs).filter(e=>Array.isArray(this.logs[e])).map(e=>this.logs[e].map(t=>{
				const r = [t.index, e, ...t]; return n.forEach(e=>{
					r[e] = t[e]
				}), r
			}))).filter((t, r, n)=>!e || e(t, r, n)).sort((e, t)=>e.index - t.index)
		}, grouped(e){
			const t = this.merged(e), r = -1 * s.DEFAULT_LOGS_COUNT; return [].concat.apply([], t.reduce((e, t, r, i)=>{
				const o = e[e.length - 1]; return o ? (t[1] === o[0][1] ? o.push(t) : (o.length > s.GROUP_MIN_LEN && o.unshift(`[${o.length}] ${o[0][1]}`), e.push(n(t))), r === i.length - 1 && o.length > s.GROUP_MIN_LEN && o.unshift(`[${o.length}] ${o[0][1]}`), e) : [n(t)]
			}, []).map(e=>e.length > s.GROUP_MIN_LEN ? [e] : e)).slice(r).map((e, t, r)=>{
				const n = 0 === t ? 0 : e.time - r[t - 1].time; return e[0] = `${e[0]} +${n}`, e
			}); function n(e){
				const t = [e]; return t.time = e.time, t
			}
		}, groupedNoMobx(e){
			return this.grouped((t, r, n)=>'mobx' !== t[1] && (!e || e(t, r, n)))
		}, source(e){
			t.stackTraceLimit = 50; const n = [r]; for (;n[0].parent && n[0] !== n[0].parent;)n.unshift(n[0].parent); let i = n.reverse().map(e=>(new e.Error).stack).join('\n').split(/\r|\n/).map(e=>e.trim()).slice(4).filter(e=>'Error' !== e).filter(e=>!s.stackFilter.test(e)); if (e){
				const t = i.findIndex(t=>-1 !== t.indexOf(e)); i = i.slice(t + 1)
			} const o = i[0] || ''; return [o.split(/at |as /).pop().split(/ |]/)[0], o.split('/').pop().slice(0, -1).trim(), ...i]
		}}
	}e.exports = {init:e=>s(e)}
}])